<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:tktclient">
    <Style x:Key="NumLeftButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.Background" Value="#ecf5ff"/>
        <Setter Property="Control.Foreground" Value="#3895ff"/>
        <Setter Property="Control.BorderBrush" Value="#9ecdff"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="border" CornerRadius="2 0 0 2" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#dddddd"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumRightButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.Background" Value="#ecf5ff"/>
        <Setter Property="Control.Foreground" Value="#3895ff"/>
        <Setter Property="Control.BorderBrush" Value="#9ecdff"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="border" CornerRadius="0 2 2 0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#dddddd"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumMidButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.Background" Value="#ecf5ff"/>
        <Setter Property="Control.Foreground" Value="#3895ff"/>
        <Setter Property="Control.BorderBrush" Value="#9ecdff"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="border" CornerRadius="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#dddddd"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="POSMoreButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.Background" Value="#21253d"/>
        <Setter Property="Control.Foreground" Value="#3895ff"/>
        <Setter Property="Control.BorderBrush" Value="#9ecdff"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="border" CornerRadius="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#181d30"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#181d30"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#dddddd"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumRadioButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.Background" Value="#ecf5ff"/>
        <Setter Property="Control.Foreground" Value="#3895ff"/>
        <Setter Property="Control.BorderBrush" Value="#9ecdff"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="border" CornerRadius="2" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#dddddd"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumLeftReBtnStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="{StaticResource NumButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource NumButton.Static.Border}"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2 0 0 2" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"/>
                        <Grid x:Name="grid" Background="{TemplateBinding Control.Background}" Opacity="0.1"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.15"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.4"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumRightReBtnStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Name="border" CornerRadius="0 2 2 0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"/>
                        <Grid x:Name="grid" Background="{TemplateBinding Control.Background}" Opacity="0.1"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.15"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.4"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalLeftButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2 0 0 2" Background="{TemplateBinding Control.Background}"
                    BorderThickness="0"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalMidButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0" Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalRightButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0 2 2 0" Background="{TemplateBinding Control.Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalRadioButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PosRadiusStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PosRadiusStyle1" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PosRadiusReBtn" TargetType="{x:Type RepeatButton}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PreButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2 0 0 2" Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFDBF9F7"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFC4FDF9"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFDAE0DF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0 2 2 0" Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="false" TextBlock.FontSize="{TemplateBinding Control.FontSize}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFDBF9F7"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFC4FDF9"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Border.Background" Value="#FFDAE0DF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>