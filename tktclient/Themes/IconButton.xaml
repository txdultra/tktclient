<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:tktclient">
    <SolidColorBrush x:Key="SettingsButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="SettingsButton.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="SettingsButton.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="SettingsButton.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="SettingsButton.Pressed.Background" Color="White"/>
    <SolidColorBrush x:Key="SettingsButton.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="SettingsButton.Pressed.Foreground" Color="White"/>
    <SolidColorBrush x:Key="SettingsButton.Disabled.Background" Color="Gray"/>
    <SolidColorBrush x:Key="SettingsButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="SettingsButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="SettingsTagButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.MouseOver.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.1"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Pressed.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.15"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Pressed.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Disabled.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Disabled.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TagForegroundBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.MouseOver.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.1"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Pressed.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.15"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Pressed.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Disabled.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource SettingsButton.Disabled.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="CloseButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="CloseButton.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Background" Color="#f55c11"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="CloseButton.Pressed.Background" Color="#d44129"/>
    <SolidColorBrush x:Key="CloseButton.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="CloseButton.Pressed.Foreground" Color="White"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Background" Color="Gray"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="CloseTagButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource CloseButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource CloseButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.MouseOver.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Pressed.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Disabled.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Disabled.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="IconLeftButton.Static.Background" Color="#21253d"/>
    <SolidColorBrush x:Key="IconLeftButton.Pressed.Background" Color="#181d30"/>
    <SolidColorBrush x:Key="IconLeftButton.Static.Foreground" Color="#bdbdc3"/>
    <SolidColorBrush x:Key="IconLeftButton.Pressed.Foreground" Color="White"/>
    <SolidColorBrush x:Key="IconLeftButton.Static.Border.Background" Color="#2fa8fa"/>
    <Style x:Key="IconLeftButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="{StaticResource RadioButton.Static.Foreground}"/>
        <Setter Property="FrameworkElement.Height" Value="45"/>
        <Setter Property="FrameworkElement.Width" Value="260"/>
        <Setter Property="Control.FontSize" Value="20"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="{StaticResource IconLeftButton.Static.Background}"
                Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBlock x:Name="tbTag" Width="{TemplateBinding Control.FontSize}"
                         Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                         Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                         Style="{DynamicResource WPIconFont}" Margin="35 0 18 0 "/>
                            <TextBlock x:Name="tbContent" VerticalAlignment="Center"
                         Foreground="{StaticResource IconLeftButton.Static.Foreground}" FontSize="13"
                         Text="{TemplateBinding ContentControl.Content}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="grid" Value="{StaticResource IconLeftButton.Pressed.Background}"
                      Property="Panel.Background"/>
                            <Setter TargetName="tbContent" Value="{StaticResource IconLeftButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconLeftRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="{StaticResource RadioButton.Static.Foreground}"/>
        <Setter Property="FrameworkElement.Height" Value="45"/>
        <Setter Property="FrameworkElement.Width" Value="260"/>
        <Setter Property="Control.FontSize" Value="20"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" Background="{StaticResource IconLeftButton.Static.Background}"
                Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBlock x:Name="tbTag" Width="{TemplateBinding Control.FontSize}"
                         Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                         Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                         Style="{DynamicResource WPIconFont}" Margin="35 0 18 0 "/>
                            <TextBlock x:Name="tbContent" VerticalAlignment="Center"
                         Foreground="{StaticResource IconLeftButton.Static.Foreground}" FontSize="13"
                         Text="{TemplateBinding ContentControl.Content}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="grid" Value="{StaticResource IconLeftButton.Pressed.Background}"
                      Property="Panel.Background"/>
                            <Setter TargetName="tbContent" Value="{StaticResource IconLeftButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="grid" Value="{StaticResource IconLeftButton.Pressed.Background}"
                      Property="Panel.Background"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="false">
                            <Setter TargetName="grid" Value="{StaticResource IconLeftButton.Static.Background}"
                      Property="Panel.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="MainIconButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="MainIconButton.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="MainIconButton.MouseOver.Background" Color="#FF30a8fa"/>
    <SolidColorBrush x:Key="MainIconButton.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="MainIconButton.Pressed.Background" Color="#FF208DD8"/>
    <SolidColorBrush x:Key="MainIconButton.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="MainIconButton.Pressed.Foreground" Color="White"/>
    <SolidColorBrush x:Key="MainIconButton.Disabled.Background" Color="Gray"/>
    <SolidColorBrush x:Key="MainIconButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="MainIconButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="MainIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"
                    Background="{TemplateBinding Control.Background}"/>
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Value="{StaticResource MainIconButton.MouseOver.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.5"/>
                            <Setter TargetName="border" Value="{StaticResource MainIconButton.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource MainIconButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Value="{StaticResource MainIconButton.Pressed.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                            <Setter TargetName="tbText" Value="{StaticResource MainIconButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource MainIconButton.Disabled.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource MainIconButton.Disabled.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainIconRightBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="0 2 2 0"
                    Background="{TemplateBinding Control.Background}"/>
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                            <Setter TargetName="tbText" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainIconLeftBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource SettingsButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource SettingsButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2 0 0 2"
                    Background="{TemplateBinding Control.Background}"/>
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="BorderButtonStyle.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="BorderButtonStyle.MouseOver.Background" Color="#f55c11"/>
    <SolidColorBrush x:Key="BorderButtonStyle.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Pressed.Background" Color="#d44129"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Pressed.Foreground" Color="White"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Disabled.Background" Color="Gray"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="BorderButtonStyle.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="BorderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Control.Background" Value="{StaticResource CloseButton.Static.Background}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource CloseButton.Static.Border}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="#CCC"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <TextBlock x:Name="tbText" Width="{TemplateBinding Control.FontSize}"
                       Height="{TemplateBinding Control.FontSize}" FontSize="{TemplateBinding Control.FontSize}"
                       Foreground="{TemplateBinding Control.Foreground}" Text="{TemplateBinding FrameworkElement.Tag}"
                       Style="{DynamicResource WPIconFont}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.MouseOver.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Pressed.Border}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="tbText" Value="{StaticResource SettingsButton.Pressed.Foreground}"
                      Property="TextBlock.Foreground"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Disabled.Background}"
                      Property="Border.Background"/>
                            <Setter TargetName="border" Value="{StaticResource CloseButton.Disabled.Border}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>