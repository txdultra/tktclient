<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:tktclient">
    <BooleanToVisibilityConverter x:Key="bvc"/>
    <Style x:Key="WPIconFont">
        <Setter Property="TextElement.FontFamily" Value="../Resources/#IconFont"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ForNoresizeWindow" TargetType="{x:Type Window}">
        <Setter Property="Window.AllowsTransparency" Value="true"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Window.WindowStyle" Value="None"/>
        <Setter Property="Window.ResizeMode" Value="CanResize"/>
        <Setter Property="Window.ShowInTaskbar" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Name="grid" Margin="8">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <UIElement.Effect>
                                <DropShadowEffect BlurRadius="8" ShadowDepth="0" Color="LightGray"/>
                            </UIElement.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding FrameworkElement.Margin}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Window.WindowState" Value="Maximized"/>
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WarkTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Control.BorderBrush" Value="#FFABADB3"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UIElement.AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="WARKTEXT" Text="{TemplateBinding FrameworkElement.Tag}" Foreground="#7F2F2F2F"
                         Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF569DE5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextBox.Text" Value=""/>
                                <Condition Property="UIElement.IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WARKTEXT" Property="UIElement.Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="TextBoxBase.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MainTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextBlock.Foreground" Value="{StaticResource MainGrayForeground}"/>
        <Setter Property="TextBlock.FontSize" Value="13"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>